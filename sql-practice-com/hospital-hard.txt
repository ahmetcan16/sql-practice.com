Database : Hospital

Difficulty : Hard

1)Show all of the patients grouped into weight groups. Show the total amount of patients in each weight group. Order the list by the weight group decending.
For example, if they weight 100 to 109 they are placed in the 100 weight group, 110-119 = 110 weight group, etc.
select count(*) , floor(weight / 10) * 10 as weight_group from patients group by weight_group order by weight_group desc

2)Show patient_id, weight, height, isObese from the patients table. Display isObese as a boolean 0 or 1. 
Obese is defined as weight(kg)/(height(m)2) >= 30. weight is in units kg. height is in units cm.
select patient_id, weight, height, (case when weight/(power(height/100.0 , 2)) >= 30 then 1 else 0 end) as isObese from patients
Extra solution) select patient_id, weight, height,  weight/(power(height/100.0 , 2)) >= 30  as isObese from patients

3)Show patient_id, first_name, last_name, and attending doctor's specialty.Show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa'
Check patients, admissions, and doctors tables for required information.
select patients.patient_id, patients.first_name, patients.last_name, specialty from admissions 
join patients on patients.patient_id = admissions.patient_id
join doctors on admissions.attending_doctor_id = doctors.doctor_id
where doctors.first_name = 'Lisa' and admissions.diagnosis = 'Epilepsy'

4)All patients who have gone through admissions, can see their medical documents on our site. Those patients are given a temporary password after their first admission. Show the patient_id and temp_password. The password must be the following, in order: 1. patient_id 2. the numerical length of patient's last_name 3. year of patient's birth_date
select distinct(patients.patient_id), concat(patients.patient_id, len(patients.last_name), year(birth_date)) from patients join admissions on patients.patient_id = admissions.patient_id 

5)Each admission costs $50 for patients without insurance, and $10 for patients with insurance. All patients with an even patient_id have insurance.
Give each patient a 'Yes' if they have insurance, and a 'No' if they don't have insurance. Add up the admission_total cost for each has_insurance group.
select sum(case when patient_id % 2 = 0 then 10 else 50 end),
(case when patient_id % 2 = 0 then 'Yes' else 'No' end) as has_insurance from admissions group by has_insurance

6)Show the provinces that has more patients identified as 'M' than 'F'. Must only show full province_name
select province_names.province_name from patients join province_names on patients.province_id = province_names.province_id 
group by patients.province_id having count(case when gender = 'M' then 1 end) > count(case when gender = 'F' then 1 end)

7)We are looking for a specific patient. Pull all columns for the patient who matches the following criteria: - First_name contains an 'r' after the first two letters. - Identifies their gender as 'F'
- Born in February, May, or December - Their weight would be between 60kg and 80kg - Their patient_id is an odd number - They are from the city 'Kingston'
select * from patients where first_name like '__%r%' and gender = 'F' and month(birth_date) in (2, 5, 12) and weight between 60 and 80 and patient_id % 2 == 1 and city = 'Kingston'

8)Show the percent of patients that have 'M' as their gender. Round the answer to the nearest hundreth number and in percent form.
SELECT CONCAT ( ROUND( ( SELECT COUNT(*) FROM patients WHERE gender = 'M' ) / CAST(COUNT(*) as float), 4 ) * 100, '%' ) as percent_of_male_patients FROM patients;


9)For each day display the total amount of admissions on that day. Display the amount changed from the previous date.
SELECT admission_date, count(admission_date) as admission_day, count(admission_date) - LAG(count(admission_date)) OVER(ORDER BY admission_date) AS admission_count_change 
FROM admissions group by admission_date

10)Sort the province names in ascending order in such a way that the province 'Ontario' is always on top.
select province_name from province_names  group by (case when province_name = 'Ontario' then 0 else 1 end), province_name















